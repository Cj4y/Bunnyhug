{"ast":null,"code":"var _jsxFileName = \"/home/fluffle/code/Bunnyhug/bunhug/app/javascript/packs/components/ListingApp.jsx\",\n    _this4 = this;\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\nimport Listings from './Listings';\nimport Listing from './Listing';\nimport ListingForm from './ListingForm';\nimport Spinner from './Spinner';\nimport ErrorMessage from './ErrorMessage';\n\nvar ListingApp = /*#__PURE__*/function (_React$Component) {\n  _inherits(ListingApp, _React$Component);\n\n  var _super = _createSuper(ListingApp);\n\n  function ListingApp(props) {\n    var _this;\n\n    _classCallCheck(this, ListingApp);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      listings: [],\n      hideInactiveListings: false,\n      isLoading: true,\n      errorMessage: null\n    };\n    _this.getListings = _this.getListings.bind(_assertThisInitialized(_this));\n    _this.createListing = _this.createListing.bind(_assertThisInitialized(_this));\n    _this.toggleInactiveListings = _this.toggleInactiveListings.bind(_assertThisInitialized(_this));\n    _this.handleErrors = _this.handleErrors.bind(_assertThisInitialized(_this));\n    _this.clearErrors = _this.clearErrors.bind(_assertThisInitialized(_this));\n    return _this;\n  } //load ListingApp component after getter\n\n\n  _createClass(ListingApp, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getListings();\n    } //request items at index /api/v1/listings\n\n  }, {\n    key: \"getListings\",\n    value: function getListings() {\n      var _this2 = this;\n\n      //if successful, load data into state\n      axios.get('/api/v1/listings') //or \"/broken-end-point\"\n      .then(function (response) {\n        _this2.clearErrors();\n\n        _this2.setState({\n          isLoading: true\n        });\n\n        var listings = response.data; //bind to the data\n\n        _this2.setState({\n          listings: listings\n        });\n\n        _this2.setState({\n          isLoading: false\n        });\n      })[\"catch\"](function (error) {\n        _this2.setState({\n          isLoading: true\n        });\n\n        _this2.setState({\n          errorMessage: {\n            message: 'There was an error loading your listings...'\n          }\n        });\n      });\n    }\n  }, {\n    key: \"createListing\",\n    value: function createListing(listing) {\n      var listings = [listing].concat(_toConsumableArray(this.state.listings));\n      this.setState({\n        listings: listings\n      });\n    }\n  }, {\n    key: \"toggleInactiveListings\",\n    value: function toggleInactiveListings() {\n      this.setState({\n        hideInactiveListings: !this.state.hideInactiveListings\n      });\n    }\n  }, {\n    key: \"handleErrors\",\n    value: function handleErrors(errorMessage) {\n      this.setState({\n        errorMessage: errorMessage\n      });\n    }\n  }, {\n    key: \"clearErrors\",\n    value: function clearErrors() {\n      this.setState({\n        errorMessage: null\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      //render the listing by mapping over each listing in state, passing unique key id generated by rails\n      //render listingForm, createListing\n      return /*#__PURE__*/React.createElement(React.Fragment, null, this.state.errorMessage && /*#__PURE__*/React.createElement(ErrorMessage, {\n        errorMessage: this.state.errorMessage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }\n      }), !this.state.isLoading && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ListingForm, {\n        createListing: this.createListing,\n        handleErrors: this.handleErrors,\n        clearErrors: this.clearErrors,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(Listings, {\n        toggleInactiveListings: this.toggleInactiveListings,\n        hideInactiveListings: this.state.hideInactiveListings,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }\n      }, this.state.listings.map(function (listing) {\n        return /*#__PURE__*/React.createElement(Listing, {\n          key: listing.id,\n          listing: listing,\n          getListings: _this3.getListings //add this prop to the component Listing to update state\n          ,\n          hideInactiveListings: _this3.state.hideInactiveListings,\n          handleErrors: _this3.handleErrors,\n          clearErrors: _this3.clearErrors,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 33\n          }\n        });\n      }))), this.state.isLoading && /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 42\n        }\n      }));\n    }\n  }]);\n\n  return ListingApp;\n}(React.Component);\n\ndocument.addEventListener('turbolinks:load', function () {\n  var app = document.getElementById('listing-app');\n  app && ReactDOM.render( /*#__PURE__*/React.createElement(ListingApp, {\n    __self: _this4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 28\n    }\n  }), app);\n});","map":{"version":3,"sources":["/home/fluffle/code/Bunnyhug/bunhug/app/javascript/packs/components/ListingApp.jsx"],"names":["React","ReactDOM","axios","Listings","Listing","ListingForm","Spinner","ErrorMessage","ListingApp","props","state","listings","hideInactiveListings","isLoading","errorMessage","getListings","bind","createListing","toggleInactiveListings","handleErrors","clearErrors","get","then","response","setState","data","error","message","listing","map","id","Component","document","addEventListener","app","getElementById","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport axios from 'axios'\n\nimport Listings from './Listings'\nimport Listing from './Listing'\nimport ListingForm from './ListingForm'\nimport Spinner from './Spinner'\nimport ErrorMessage from './ErrorMessage'\nclass ListingApp extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            listings: [],\n            hideInactiveListings: false,\n            isLoading: true,\n            errorMessage: null,\n        }\n        this.getListings= this.getListings.bind(this)\n        this.createListing = this.createListing.bind(this)\n        this.toggleInactiveListings= this.toggleInactiveListings.bind(this)\n        this.handleErrors = this.handleErrors.bind(this)\n        this.clearErrors = this.clearErrors.bind(this)\n    }\n    //load ListingApp component after getter\n    componentDidMount() {\n        this.getListings()\n    }\n    //request items at index /api/v1/listings\n    getListings() {\n      \n    //if successful, load data into state\n        axios\n            .get('/api/v1/listings') //or \"/broken-end-point\"\n            .then(response => { \n                this.clearErrors()\n                this.setState({ isLoading: true })\n                const listings = response.data  //bind to the data\n                this.setState({ listings})\n                this.setState({ isLoading: false })\n            })\n            .catch(error => {\n                this.setState({ isLoading: true })\n                this.setState({\n                    errorMessage: {\n                        message:\n                            'There was an error loading your listings...',\n                    },\n                })\n            })\n    }\n    createListing(listing) {\n        const listings = [listing, ...this.state.listings]\n        this.setState({ listings })\n    }\n    toggleInactiveListings() {\n        this.setState({\n            hideInactiveListings: !this.state.hideInactiveListings,\n        })\n    }\n    handleErrors(errorMessage) {\n        this.setState({ errorMessage })\n    }\n    clearErrors() {\n        this.setState({\n            errorMessage: null,\n        })\n    }\n    render() {\n      //render the listing by mapping over each listing in state, passing unique key id generated by rails\n      //render listingForm, createListing\n        return (\n            <>\n                {this.state.errorMessage && (\n                    <ErrorMessage errorMessage={this.state.errorMessage} />\n                )}\n                {!this.state.isLoading && (\n                    <>\n                        <ListingForm \n                            createListing={this.createListing}\n                            handleErrors={this.handleErrors}\n                            clearErrors={this.clearErrors}\n                        />\n                        <Listings\n                            toggleInactiveListings={\n                                this.toggleInactiveListings\n                            }\n                            hideInactiveListings={\n                                this.state.hideInactiveListings\n                            }\n                        >\n                            {this.state.listings.map(listing => (\n                                <Listing\n                                    key={listing.id}\n                                    listing={listing}\n                                    getListings={this.getListings} //add this prop to the component Listing to update state\n                                    hideInactiveListings={\n                                        this.state.hideInactiveListings\n                                    }\n                                    handleErrors={this.handleErrors}\n                                    clearErrors={this.clearErrors}\n                                />\n                            ))}\n                        </Listings>\n                    </>\n                )}\n                {this.state.isLoading && <Spinner />}\n            </>\n        )\n    }\n}\ndocument.addEventListener('turbolinks:load', () => {\n    const app = document.getElementById('listing-app')\n    app && ReactDOM.render(<ListingApp />, app)\n})"]},"metadata":{},"sourceType":"module"}